# 🧠 ECG Arrhythmia Detection using Feedforward Neural Networks: SMOTE vs No-SMOTE

In this blog, we explore the use of **feedforward neural networks** for classifying ECG heartbeats using a feature-extracted dataset. We compare two training approaches:

* ✅ One **without** class balancing.
* 🔄 One **with SMOTE** (Synthetic Minority Oversampling Technique) applied.

Our goal is to understand how data imbalance affects classification performance, especially on minority heartbeat types such as **Supraventricular (SVEB)** and **Fusion beats (F)**.

---

## 📦 Dataset Overview

The dataset consists of feature-engineered ECG heartbeat data with the following classes:

* **N** - Normal
* **VEB** - Ventricular Ectopic Beats
* **SVEB** - Supraventricular Ectopic Beats
* **F** - Fusion Beats
* **Q** - Unknown

---

## 🏗️ Neural Network Architecture

Both models use the same structure:

```matlab
layers = [
    featureInputLayer(numFeatures)
    fullyConnectedLayer(64)
    reluLayer
    fullyConnectedLayer(32)
    reluLayer
    fullyConnectedLayer(numClasses)
    softmaxLayer
    classificationLayer
];
```

**Optimizer**: `adam`
**Epochs**: 30
**Mini-batch size**: 64
**Validation frequency**: Every 30 iterations

---

## ⚙️ Model 1: Without SMOTE

This model was trained on the **original, imbalanced dataset**.

### 🔢 Accuracy: **96.33%**

```matlab
Test Accuracy: 96.33%
```

### 📊 Class-wise Performance

| Class    | Precision | Recall | F1 Score | Support |
| -------- | --------- | ------ | -------- | ------- |
| **F**    | 0.000     | 0.000  | 0.000    | 188     |
| **N**    | 0.976     | 0.990  | 0.983    | 132,630 |
| **Q**    | 0.958     | 0.635  | 0.764    | 1,196   |
| **SVEB** | 0.775     | 0.202  | 0.321    | 2,781   |
| **VEB**  | 0.771     | 0.852  | 0.810    | 7,751   |

#### ❌ Observation:

* Excellent performance for **N** and **VEB** due to high support.
* Poor detection of **F** and **SVEB**—common in imbalanced datasets.
* **Fusion beats (F)** were **never predicted** by the model.

---

## 🔁 Model 2: With SMOTE

This model was trained after **balancing the classes using SMOTE**.

### 🔢 Accuracy: **96.87%**

```matlab
Test Accuracy: 96.87%
```

### 📊 Class-wise Performance

| Class    | Precision | Recall | F1 Score | Support |
| -------- | --------- | ------ | -------- | ------- |
| **F**    | 0.765     | 0.069  | 0.127    | 188     |
| **N**    | 0.975     | 0.995  | 0.985    | 132,630 |
| **Q**    | 0.893     | 0.776  | 0.830    | 1,196   |
| **SVEB** | 0.732     | 0.317  | 0.443    | 2,781   |
| **VEB**  | 0.904     | 0.808  | 0.853    | 7,751   |

#### ✅ Observation:

* Overall performance increased slightly across all classes.
* **F** class is now detected with **reasonable precision**, though still difficult due to low sample size.
* **SVEB** recall improved from 20% → 32%.

---

## 📈 Confusion Matrix Analysis

Both models show that **N** class dominates due to its overwhelming support. With SMOTE applied, the confusion matrix becomes more balanced—especially for Q, SVEB, and F classes.

---

## 🏁 Conclusion: Which Is Better?

| Metric           | Without SMOTE | With SMOTE |
| ---------------- | ------------- | ---------- |
| Overall Accuracy | 96.33%        | **96.87%** |
| F1 (SVEB)        | 0.321         | **0.443**  |
| F1 (F)           | 0.000         | **0.127**  |
| F1 (Q)           | 0.764         | **0.830**  |

✅ **Winner: SMOTE-enhanced Model**

* Improves minority class detection (F, SVEB, Q) without sacrificing accuracy.
* Adds fairness and clinical relevance—crucial for medical applications where rare arrhythmias matter.

---

## 💡 Final Note

SMOTE is not just a statistical trick—it can **save lives** by improving detection of rare but dangerous heartbeat patterns. For ECG classification tasks, combining **SMOTE** with **neural networks** strikes a strong balance between accuracy and inclusivity.
